#ifndef SCANNER_H
#define SCANNER_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>

enum {
    TOKEN_EOF,
    TOKEN_UNKNOWN,
    TOKEN_AUTO,
    TOKEN_BREAK,
    TOKEN_CASE,
    TOKEN_CHAR,
    TOKEN_CONST,
    TOKEN_CONTINUE,
    TOKEN_DEFAULT,
    TOKEN_DO,
    TOKEN_DOUBLE,
    TOKEN_ELSE,
    TOKEN_ENUM,
    TOKEN_EXTERN,
    TOKEN_FLOAT,
    TOKEN_FOR,
    TOKEN_GOTO,
    TOKEN_IF,
    TOKEN_INLINE,
    TOKEN_INT,
    TOKEN_LONG,
    TOKEN_REGISTER,
    TOKEN_RESTRICT,
    TOKEN_RETURN,
    TOKEN_SHORT,
    TOKEN_SIGNED,
    TOKEN_SIZEOF,
    TOKEN_STATIC,
    TOKEN_STRUCT,
    TOKEN_SWITCH,
    TOKEN_TYPEDEF,
    TOKEN_UNION,
    TOKEN_UNSIGNED,
    TOKEN_VOID,
    TOKEN_VOLATILE,
    TOKEN_WHILE,
    TOKEN_ALIGNAS,
    TOKEN_ALIGNOF,
    TOKEN_ATOMIC,
    TOKEN_BOOL,
    TOKEN_COMPLEX,
    TOKEN_GENERIC,
    TOKEN_IMAGINARY,
    TOKEN_NORETURN,
    TOKEN_STATIC_ASSERT,
    TOKEN_THREAD_LOCAL,
    TOKEN_FUNC_NAME,
    TOKEN_IDENTIFIER,
    TOKEN_I_CONSTANT,
    TOKEN_F_CONSTANT,
    TOKEN_STRING_LITERAL,
    TOKEN_ELLIPSIS,
    TOKEN_RIGHT_ASSIGN,
    TOKEN_LEFT_ASSIGN,
    TOKEN_ADD_ASSIGN,
    TOKEN_SUB_ASSIGN,
    TOKEN_MUL_ASSIGN,
    TOKEN_DIV_ASSIGN,
    TOKEN_MOD_ASSIGN,
    TOKEN_AND_ASSIGN,
    TOKEN_XOR_ASSIGN,
    TOKEN_OR_ASSIGN,
    TOKEN_RIGHT_OP,
    TOKEN_LEFT_OP,
    TOKEN_INC_OP,
    TOKEN_DEC_OP,
    TOKEN_PTR_OP,
    TOKEN_AND_OP,
    TOKEN_OR_OP,
    TOKEN_LE_OP,
    TOKEN_GE_OP,
    TOKEN_EQ_OP,
    TOKEN_NE_OP,
    TOKEN_SEMICOLON,
    TOKEN_LBRACE,
    TOKEN_RBRACE,
    TOKEN_COMMA,
    TOKEN_COLON,
    TOKEN_ASSIGN,
    TOKEN_LPAREN,
    TOKEN_RPAREN,
    TOKEN_LBRACKET,
    TOKEN_RBRACKET,
    TOKEN_DOT,
    TOKEN_AMPERSAND,
    TOKEN_NOT,
    TOKEN_TILDE,
    TOKEN_MINUS,
    TOKEN_PLUS,
    TOKEN_STAR,
    TOKEN_SLASH,
    TOKEN_PERCENT,
    TOKEN_LT,
    TOKEN_GT,
    TOKEN_CARET,
    TOKEN_PIPE,
    TOKEN_QUESTION,
};

void init_scanner(FILE *input);
int yylex(void);

// Get current lexeme
char *get_yytext(void);

#ifdef __cplusplus
}
#endif

#endif // SCANNER_H
